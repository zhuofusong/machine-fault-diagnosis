/*
 * Machine fault diagnosis
 * List of top level server APIs
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * user-defined fixed configurations
 */
@Schema(description = "user-defined fixed configurations")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-04-16T08:54:30.701Z[GMT]")
public class ModelFlowChartExtensionFixedConfig {
  @SerializedName("compatibility")
  private List<String> compatibility = null;

  public ModelFlowChartExtensionFixedConfig compatibility(List<String> compatibility) {
    this.compatibility = compatibility;
    return this;
  }

  public ModelFlowChartExtensionFixedConfig addCompatibilityItem(String compatibilityItem) {
    if (this.compatibility == null) {
      this.compatibility = new ArrayList<String>();
    }
    this.compatibility.add(compatibilityItem);
    return this;
  }

   /**
   * list of model flow charts it is compatible with
   * @return compatibility
  **/
  @Schema(description = "list of model flow charts it is compatible with")
  public List<String> getCompatibility() {
    return compatibility;
  }

  public void setCompatibility(List<String> compatibility) {
    this.compatibility = compatibility;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModelFlowChartExtensionFixedConfig modelFlowChartExtensionFixedConfig = (ModelFlowChartExtensionFixedConfig) o;
    return Objects.equals(this.compatibility, modelFlowChartExtensionFixedConfig.compatibility);
  }

  @Override
  public int hashCode() {
    return Objects.hash(compatibility);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModelFlowChartExtensionFixedConfig {\n");
    
    sb.append("    compatibility: ").append(toIndentedString(compatibility)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
