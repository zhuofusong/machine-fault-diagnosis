/*
 * Machine fault diagnosis
 * List of top level server APIs
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.ModelFlowChartEdgeMeta;
import io.swagger.client.model.ModelFlowChartExtensionMeta;
import io.swagger.client.model.ModelFlowChartNodeComponentMeta;
import io.swagger.client.model.ModelFlowChartNodeMeta;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * ModelFlowChartGraph
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-04-16T08:54:30.701Z[GMT]")
public class ModelFlowChartGraph {
  @SerializedName("nodes")
  private List<ModelFlowChartNodeMeta> nodes = new ArrayList<ModelFlowChartNodeMeta>();

  @SerializedName("node_components")
  private List<ModelFlowChartNodeComponentMeta> nodeComponents = null;

  @SerializedName("edges")
  private List<ModelFlowChartEdgeMeta> edges = new ArrayList<ModelFlowChartEdgeMeta>();

  @SerializedName("extensions")
  private List<ModelFlowChartExtensionMeta> extensions = null;

  public ModelFlowChartGraph nodes(List<ModelFlowChartNodeMeta> nodes) {
    this.nodes = nodes;
    return this;
  }

  public ModelFlowChartGraph addNodesItem(ModelFlowChartNodeMeta nodesItem) {
    this.nodes.add(nodesItem);
    return this;
  }

   /**
   * Get nodes
   * @return nodes
  **/
  @Schema(required = true, description = "")
  public List<ModelFlowChartNodeMeta> getNodes() {
    return nodes;
  }

  public void setNodes(List<ModelFlowChartNodeMeta> nodes) {
    this.nodes = nodes;
  }

  public ModelFlowChartGraph nodeComponents(List<ModelFlowChartNodeComponentMeta> nodeComponents) {
    this.nodeComponents = nodeComponents;
    return this;
  }

  public ModelFlowChartGraph addNodeComponentsItem(ModelFlowChartNodeComponentMeta nodeComponentsItem) {
    if (this.nodeComponents == null) {
      this.nodeComponents = new ArrayList<ModelFlowChartNodeComponentMeta>();
    }
    this.nodeComponents.add(nodeComponentsItem);
    return this;
  }

   /**
   * Get nodeComponents
   * @return nodeComponents
  **/
  @Schema(description = "")
  public List<ModelFlowChartNodeComponentMeta> getNodeComponents() {
    return nodeComponents;
  }

  public void setNodeComponents(List<ModelFlowChartNodeComponentMeta> nodeComponents) {
    this.nodeComponents = nodeComponents;
  }

  public ModelFlowChartGraph edges(List<ModelFlowChartEdgeMeta> edges) {
    this.edges = edges;
    return this;
  }

  public ModelFlowChartGraph addEdgesItem(ModelFlowChartEdgeMeta edgesItem) {
    this.edges.add(edgesItem);
    return this;
  }

   /**
   * Get edges
   * @return edges
  **/
  @Schema(required = true, description = "")
  public List<ModelFlowChartEdgeMeta> getEdges() {
    return edges;
  }

  public void setEdges(List<ModelFlowChartEdgeMeta> edges) {
    this.edges = edges;
  }

  public ModelFlowChartGraph extensions(List<ModelFlowChartExtensionMeta> extensions) {
    this.extensions = extensions;
    return this;
  }

  public ModelFlowChartGraph addExtensionsItem(ModelFlowChartExtensionMeta extensionsItem) {
    if (this.extensions == null) {
      this.extensions = new ArrayList<ModelFlowChartExtensionMeta>();
    }
    this.extensions.add(extensionsItem);
    return this;
  }

   /**
   * Get extensions
   * @return extensions
  **/
  @Schema(description = "")
  public List<ModelFlowChartExtensionMeta> getExtensions() {
    return extensions;
  }

  public void setExtensions(List<ModelFlowChartExtensionMeta> extensions) {
    this.extensions = extensions;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModelFlowChartGraph modelFlowChartGraph = (ModelFlowChartGraph) o;
    return Objects.equals(this.nodes, modelFlowChartGraph.nodes) &&
        Objects.equals(this.nodeComponents, modelFlowChartGraph.nodeComponents) &&
        Objects.equals(this.edges, modelFlowChartGraph.edges) &&
        Objects.equals(this.extensions, modelFlowChartGraph.extensions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(nodes, nodeComponents, edges, extensions);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModelFlowChartGraph {\n");
    
    sb.append("    nodes: ").append(toIndentedString(nodes)).append("\n");
    sb.append("    nodeComponents: ").append(toIndentedString(nodeComponents)).append("\n");
    sb.append("    edges: ").append(toIndentedString(edges)).append("\n");
    sb.append("    extensions: ").append(toIndentedString(extensions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
