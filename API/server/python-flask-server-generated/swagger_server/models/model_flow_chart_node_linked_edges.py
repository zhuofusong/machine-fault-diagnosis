# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class ModelFlowChartNodeLinkedEdges(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, direction: str=None, edge_data_flow: object=None):  # noqa: E501
        """ModelFlowChartNodeLinkedEdges - a model defined in Swagger

        :param direction: The direction of this ModelFlowChartNodeLinkedEdges.  # noqa: E501
        :type direction: str
        :param edge_data_flow: The edge_data_flow of this ModelFlowChartNodeLinkedEdges.  # noqa: E501
        :type edge_data_flow: object
        """
        self.swagger_types = {
            'direction': str,
            'edge_data_flow': object
        }

        self.attribute_map = {
            'direction': 'direction',
            'edge_data_flow': 'edge_data_flow'
        }
        self._direction = direction
        self._edge_data_flow = edge_data_flow

    @classmethod
    def from_dict(cls, dikt) -> 'ModelFlowChartNodeLinkedEdges':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The modelFlowChartNode_linked_edges of this ModelFlowChartNodeLinkedEdges.  # noqa: E501
        :rtype: ModelFlowChartNodeLinkedEdges
        """
        return util.deserialize_model(dikt, cls)

    @property
    def direction(self) -> str:
        """Gets the direction of this ModelFlowChartNodeLinkedEdges.


        :return: The direction of this ModelFlowChartNodeLinkedEdges.
        :rtype: str
        """
        return self._direction

    @direction.setter
    def direction(self, direction: str):
        """Sets the direction of this ModelFlowChartNodeLinkedEdges.


        :param direction: The direction of this ModelFlowChartNodeLinkedEdges.
        :type direction: str
        """

        self._direction = direction

    @property
    def edge_data_flow(self) -> object:
        """Gets the edge_data_flow of this ModelFlowChartNodeLinkedEdges.

        variable mapping between two nodes  # noqa: E501

        :return: The edge_data_flow of this ModelFlowChartNodeLinkedEdges.
        :rtype: object
        """
        return self._edge_data_flow

    @edge_data_flow.setter
    def edge_data_flow(self, edge_data_flow: object):
        """Sets the edge_data_flow of this ModelFlowChartNodeLinkedEdges.

        variable mapping between two nodes  # noqa: E501

        :param edge_data_flow: The edge_data_flow of this ModelFlowChartNodeLinkedEdges.
        :type edge_data_flow: object
        """

        self._edge_data_flow = edge_data_flow
