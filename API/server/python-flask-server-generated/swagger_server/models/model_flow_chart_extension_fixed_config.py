# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class ModelFlowChartExtensionFixedConfig(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, compatibility: List[str]=None):  # noqa: E501
        """ModelFlowChartExtensionFixedConfig - a model defined in Swagger

        :param compatibility: The compatibility of this ModelFlowChartExtensionFixedConfig.  # noqa: E501
        :type compatibility: List[str]
        """
        self.swagger_types = {
            'compatibility': List[str]
        }

        self.attribute_map = {
            'compatibility': 'compatibility'
        }
        self._compatibility = compatibility

    @classmethod
    def from_dict(cls, dikt) -> 'ModelFlowChartExtensionFixedConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The modelFlowChartExtension_fixed_config of this ModelFlowChartExtensionFixedConfig.  # noqa: E501
        :rtype: ModelFlowChartExtensionFixedConfig
        """
        return util.deserialize_model(dikt, cls)

    @property
    def compatibility(self) -> List[str]:
        """Gets the compatibility of this ModelFlowChartExtensionFixedConfig.

        list of model flow charts it is compatible with  # noqa: E501

        :return: The compatibility of this ModelFlowChartExtensionFixedConfig.
        :rtype: List[str]
        """
        return self._compatibility

    @compatibility.setter
    def compatibility(self, compatibility: List[str]):
        """Sets the compatibility of this ModelFlowChartExtensionFixedConfig.

        list of model flow charts it is compatible with  # noqa: E501

        :param compatibility: The compatibility of this ModelFlowChartExtensionFixedConfig.
        :type compatibility: List[str]
        """

        self._compatibility = compatibility
