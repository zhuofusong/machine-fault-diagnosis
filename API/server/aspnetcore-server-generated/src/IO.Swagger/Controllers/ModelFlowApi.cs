/*
 * Machine fault diagnosis
 *
 * List of top level server APIs
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using IO.Swagger.Attributes;
using IO.Swagger.Security;
using Microsoft.AspNetCore.Authorization;
using IO.Swagger.Models;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class ModelFlowApiController : ControllerBase
    { 
        /// <summary>
        /// delete a list of model flow charts
        /// </summary>
        /// <remarks>delete a list of model flow charts</remarks>
        /// <param name="modelFlowSearchString">the string for searching for model flow charts</param>
        /// <response code="200">the list of model flow charts deleted</response>
        /// <response code="400">input is invalid</response>
        /// <response code="404">No model flow chart satisfies the search criteria</response>
        /// <response code="500">internal server error</response>
        [HttpDelete]
        [Route("/zhuofusong/machine-fault-diagnosis/1.0.0/modelFlow")]
        [ValidateModelState]
        [SwaggerOperation("ModelFlowDelete")]
        [SwaggerResponse(statusCode: 200, type: typeof(Object), description: "the list of model flow charts deleted")]
        public virtual IActionResult ModelFlowDelete([FromQuery]string modelFlowSearchString)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Object));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);

            //TODO: Uncomment the next line to return response 500 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(500);
            string exampleJson = null;
            exampleJson = "{ }";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<Object>(exampleJson)
                        : default(Object);            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// get a list of all model flow charts
        /// </summary>
        /// <remarks>Get a list of all model flow charts</remarks>
        /// <param name="modelFlowSearchString">the string for searching for model flow charts</param>
        /// <response code="200">a list of model flow charts returned</response>
        /// <response code="400">input is invalid</response>
        /// <response code="404">No model flow chart satisfies the search criteria</response>
        /// <response code="500">internal server error</response>
        [HttpGet]
        [Route("/zhuofusong/machine-fault-diagnosis/1.0.0/modelFlow")]
        [ValidateModelState]
        [SwaggerOperation("ModelFlowGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<ModelFlowChartMeta>), description: "a list of model flow charts returned")]
        public virtual IActionResult ModelFlowGet([FromQuery]string modelFlowSearchString)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<ModelFlowChartMeta>));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);

            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);

            //TODO: Uncomment the next line to return response 500 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(500);
            string exampleJson = null;
            exampleJson = "[ {\n  \"lastModifiedTime\" : 6.027456183070403,\n  \"comments\" : \"comments\",\n  \"kind\" : \"kind\",\n  \"author\" : \"author\",\n  \"editMode\" : \"editMode\",\n  \"createdTime\" : 0.8008281904610115,\n  \"id\" : \"id\",\n  \"config\" : { }\n}, {\n  \"lastModifiedTime\" : 6.027456183070403,\n  \"comments\" : \"comments\",\n  \"kind\" : \"kind\",\n  \"author\" : \"author\",\n  \"editMode\" : \"editMode\",\n  \"createdTime\" : 0.8008281904610115,\n  \"id\" : \"id\",\n  \"config\" : { }\n} ]";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<List<ModelFlowChartMeta>>(exampleJson)
                        : default(List<ModelFlowChartMeta>);            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
